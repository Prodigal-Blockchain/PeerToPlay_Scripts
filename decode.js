function decodeCorrectData(hexData) {
  const stripHexPrefix = hexData.startsWith('0x') ? hexData.slice(2) : hexData;
  const dataBuffer = Buffer.from(stripHexPrefix, 'hex');

  // Helper functions
  function readUint256(offset) {
      const hexString = dataBuffer.slice(offset, offset + 32).toString('hex');
      return hexString ? BigInt('0x' + hexString) : BigInt(0);
  }

  function readString(offset) {
      const strLength = Number(readUint256(offset));
      return dataBuffer.slice(offset + 32, offset + 32 + strLength).toString('utf8');
  }

  function readAddress(offset) {
      return '0x' + dataBuffer.slice(offset, offset + 20).toString('hex');
  }

  // Decoding the data
  const valueOffset = 32 * 7; // Adjust based on the data structure
  const value = readUint256(valueOffset).toString();

  const targetsNamesOffset = Number(readUint256(32 * 8)) + 32; // Adjusted to correctly calculate the dynamic offset
  const targetsNames = readString(targetsNamesOffset);

  const targetsOffset = Number(readUint256(32 * 9)) + 32; // Similarly adjusted
  const targets = readAddress(targetsOffset);

  const eventNamesOffset = Number(readUint256(32 * 10)) + 32; // And adjusted
  const eventNames = readString(eventNamesOffset);

  const eventParamsOffset = Number(readUint256(32 * 11)) + 32; // Finally adjusted
  const eventParamsLength = dataBuffer.length - eventParamsOffset;
  const eventParams = dataBuffer.slice(eventParamsOffset, eventParamsOffset + eventParamsLength).toString('hex');

  console.log({
      value,
      targetsNames,
      targets,
      eventNames,
      eventParams
  });
}

// Example usage with your hex data string
const hexData = "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000c556e697377617056332d763100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000593d4f490736933a88f4ccd89124c3be8deca9380000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000344c6f674d696e742875696e743235362c75696e743235362c75696e743235362c75696e743235362c696e7432342c696e743234290000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000011f00100000000000000000000000000000000000000000000000000000015a99832e500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004e20fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbad84fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc242";
decodeCorrectData(hexData);